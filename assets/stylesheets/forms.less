//
//  STACK OVERFLOW
//  FORMS
//
//  TABLE OF CONTENTS
//  • VARIABLES
//  • BASE STYLES
//  • SPECIFIC STYLES
//
//  ============================================================================
//  $ IMPORTS
//  ----------------------------------------------------------------------------
//  @import "../modules/_composer";

//  TEMPORARY BUTTON OVERRIDE
input[type="submit"],
input[type="button"],
button, .button,
[class^="btn"] {
    margin: 0;
    padding: 0.885em 1.1em;
    min-height: initial;
}

//  ============================================================================
//  $ VARIABLES
//  ----------------------------------------------------------------------------
@input-padding:                 (@padding-half + 1) @padding-base;
@input-fontSize:                @body-font-size + 1;
@input-lineHeight:              1.461538462;
@input-color:                   @black-700;
@input-border:                  @black-150;
@input-sprite-width:            137px;
@input-placeholder-color:       @black-150;

@input_disabled-background:     @black-050;
@input_disabled-border:         @black-075;
@input_disabled-color:          @black-400;
@input_disabled-shadowInner:    fade(@black-350,10%);

@input_focused-border:          @blue-500;
@input_focused-color:           @blue-400;
@input_focused-shadowInner:     @black-050;
@input_focused-shadowDrop:      fade(@input_focused-border,50%);

@input-warning-border:          @yellow-500;
@input-warning-color:           desaturate(@yellow-700,60%);


//  ============================================================================
//  $ TYPE STYLES
//  ----------------------------------------------------------------------------
//  -- Labels
label, .label {
    font-size: 14px;
    font-weight: 700;
    color: @black-700;

    //  --  Layout
    &._block    { display: block; }

    //  --  Styles
    &._muted    { color: @copy_muted-color; }

    //  --  Sizes
    &._small    { font-size: @input-fontSize - 1; }
    &._medium   { font-size: @input-fontSize + 4; }
    &._large    { font-size: @input-fontSize + 8; }

    &._medium,
    &._large { font-weight: 400; }
}

//  --  Required / Optional
span.required,
span.optional {
    display: inline-block;
    margin-left: @margin-half;
    font-size: 11px;
    font-style: italic;
    font-weight: 400;
}
span.required { color: @red-500; }
span.optional { color: @black-400; }

//  --  Help Text
.-help {
    margin-top: @margin-half;
    margin-bottom: @margin-base;
    color: @black-400;
    font-size: @input-fontSize - 1;
    line-height: 1.230769231;   // 16px / 13px 

    &._medium { font-size: @input-fontSize; }
}


//  ============================================================================
//  $ INPUT STYLES 
//  ----------------------------------------------------------------------------
//  Set the baseline styles for everything up front. Keeping this fairly generic.
select,
textarea,
input[type="text"],
input[type="password"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="datetime"],
.input,
.tag-editor,
.container .chosen-container > .chosen-choices {
    box-sizing: border-box;
    margin: 0;
    vertical-align: middle;

    //  --  Placeholder
    &::-webkit-input-placeholder,
    &::-moz-placeholder,            // Firefox 19+
    &:-ms-input-placeholder { color: @input-placeholder-color; }

    //  Create some whitespace for the input when it directly follows a label
    label + &,
    & + .-row { margin-top: @margin-half; }

    //  --  Layout
    &._block   {
        display: block;
        margin-left: 0;
    }

    //  --  Sizes
    &._large { padding: @padding-base (@padding-base - 1) (@padding-base - 1); }
    &._small { padding: @padding-half (@padding-base - 2) (@padding-half - 1); }
}

//  $ TEXTAREA 
//  ----------------------------------------------------------------------------
textarea {
    height: auto;
    resize: vertical;
    font-size: @input-fontSize - 1;
    line-height: @input-lineHeight - 0.3;
}

//  $ SELECTS 
//  ----------------------------------------------------------------------------
//  We leave the base, default styles intact
select {
    padding: 2px;
    font-size: @input-fontSize - 1;
    border-color: @input-color;

    &:focus {
        outline: 0;
        border-color: @input_focused-border;
    }

    &[disabled] {
        background-color: @input_disabled-background;
        border-color: @input_disabled-border;
        color: @input_disabled-color;
        cursor: not-allowed;
    }
}

//  But we prefer to use these beautiful custom styles
.select {
    position: relative;
    align-items: stretch;

    select {
        .appearance(none);
        padding: @input-padding;
        width: 100%;

        font-size: @input-fontSize;
        line-height: @input-lineHeight;
        color: @input-color;
        background-color: @white;
        border: 1px solid @input-border;
        border-radius: @borderRadius-small;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, background-color 0.15s ease-in-out;

        &:hover {
            border-color: fade(@input_focused-border,50%);
            box-shadow: inset 0 0 2px darken(@input_focused-shadowInner,10%), 0 0 2px fade(@input_focused-shadowDrop,20%);
        }
        
        &:focus {
            border-color: @input_focused-border;
            box-shadow: inset 0 0 4px @input_focused-shadowInner, 0 0 5px @input_focused-shadowDrop;
            outline: 0;
        }
    }

    label + & { margin-top: @margin-half; }

    // Create custom arrows since appearance removes them.
    &:before,
    &:after {
        content: "";
        position: absolute;
        right: 10px;
        pointer-events: none;

        border-width: 4px;
        border-style: solid;
        border-color: @input-color transparent;
    }
    &:before {
        top: calc(~"50% - 7px");
        border-top-width: 0;
        border-bottom-width: 6px;
    }
    &:after {
        top: calc(~"50% + 1px");
        border-top-width: 6px;
        border-bottom-width: 0;
    }

    //  Disabled State
    //  You have to apply this to the wrapping div so the arrows look disabled too.
    &._disabled {
        &:before,
        &:after { opacity: 0.3; }

        select {
            color: lighten(@input-color,45%);
            background-color: @black-050;
            border-color: lighten(@input-border,10%);

            &:hover {
                border-color: lighten(@input-border,10%);
                box-shadow: none;
            }
        }
    }
}


input[type="file"] {
    display: block;
    margin: 0;
    padding: @padding-half 0;
    font-size: 11px;
}


//  --  Okay now we can style input fields
textarea,
input[type="text"],
input[type="password"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="datetime"],
.input,
.tag-editor,
.container .chosen-container > .chosen-choices {
    padding: @input-padding;
    min-height: auto;
    width: 100%;

    font-size: @input-fontSize;
    line-height: @input-lineHeight;
    color: @input-color;

    background-color: @white;
    border: 1px solid @input-border;
    box-shadow: inset 0 0 1px fade(@black-350,20%), 0 0 0 fade(@white,0%);
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, background-color 0.15s ease-in-out;
    
    &:hover {
        border-color: fade(@input_focused-border,50%);
        box-shadow: inset 0 0 2px darken(@input_focused-shadowInner,10%), 0 0 2px fade(@input_focused-shadowDrop,20%);
    }
    
    &:focus,
    &._focus {
        border-color: @input_focused-border;
        box-shadow: inset 0 0 4px @input_focused-shadowInner, 0 0 5px @input_focused-shadowDrop;
        outline: 0;
    }

    &[disabled], &._disabled,
    &[readonly], &._readonly {
        background-color: @input_disabled-background;
        border-color: @input_disabled-border;
        box-shadow: inset 0 0 3px @input_disabled-shadowInner;
        color: @input_disabled-color;
    }
    &[disabled], &._disabled {
        cursor: not-allowed;

        // icon
        background-image: url("../images/forms.svg"), none;
        background-repeat: no-repeat;
        background-position: ~'calc(100% + @{input-sprite-width} - 124px)' -126px;
    }
}


//  ============================================================================
//  $ INPUT LAYOUT OPTIONS
//  ----------------------------------------------------------------------------
select,
textarea,
input,
.input,
.input._uneditable {
    &._large  { font-size: 24px; }
    &._medium { font-size: 18px; }
    &._small  { font-size: 12px; }
}


//  ============================================================================
//  $ CHECKBOXES & RADIO SELECTS
//  ----------------------------------------------------------------------------
.checkbox,
.radio {
    *,
    *:before,
    *:after { box-sizing: border-box; }

    .flexbox();

    input {
        margin: 0;
        margin-right: @margin-half;
        &:focus { outline: 0; }
    }
    label {
        font-weight: 400;
        cursor: pointer;
    }
    .-help {
        margin-top: 2px;
        margin-bottom: 2px;
        padding-right: 1em;
    }

    //  --  LAYOUTS
    //  When you have multiple checkbox or radios next to each other, space them out
    & + &,
    input + & { margin-top: @margin-half; }

    //  Position Alignment
    //  Have to use margin-left to push items to the right: http://stackoverflow.com/a/22429853/2640230
    &._right { margin-left: auto; }
}

.radio input[type="radio"],
.checkbox input[type="checkbox"] {
    margin: 0; // Reset browser

    label > & {
        margin: 0;
        margin-right: @margin-half;
    }
}


//  ============================================================================
//  $ STATES
//  ----------------------------------------------------------------------------
.input-group {
    //  Message (Generic)
    .-message {
        display: block;
        margin-bottom: 0;
        padding-top: @padding-half;
        padding-bottom: @padding-half;
    }

    .-icon {
        position: absolute;
        top: calc(~"50% - 12px");
        right: 10px;
        width: 16px;
        height: 16px;

        background-position: 0 0;
        background-repeat: no-repeat;
        background-size: cover;
    }

    //  --  WARNING
    &._warning {
        input {
            border-color: mix(@yellow-500,@orange-600);

            &:hover {
                border-color: lighten(mix(@yellow-500,@orange-600),10%);
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @yellow-200;
            }
            &:focus {
                border-color: saturate(mix(@yellow-500,@orange-600),10%);
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @yellow-200;
            }
        }

        .-message { color: mix(@yellow-500,@orange-600); }

        .-icon { background-image: url(../images/icon-warning.svg), none; }
    }

    //  --  ERROR
    &._error {
        input {
            border-color: @red-400;

            &:hover {
                border-color: @red-300;
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @red-100;
            }
            &:focus {
                border-color: @red-500;
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @red-200;
            }
        }

        .-message { color: @red-500; }

        .-icon { background-image: url(../images/icon-error.svg), none; }
    }

    //  --  SUCCESS
    &._success {
        input[required]:valid,
        input:valid,
        input {
            border-color: @green-400;
            
            &:hover {
                border-color: @green-300;
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @green-100;
            }
            &:focus {
                border-color: @green-500;
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @green-200;
            }
        }

        .-message { color: darken(@green-500,5%); }

        .-icon { background-image: url(../images/icon-success.svg), none; }
    }
}

//  ============================================================================
//  $ INPUT & BUTTON GROUPS 
//  ----------------------------------------------------------------------------
//  --  Grid Systems
@grid-col-width: 100% / 12;

.input-group,
.button-group {
    *,
    *:before,
    *:after { box-sizing: border-box; }

    position: relative;
    
    .flexbox();
    .flex(1 1 auto);
    .flex-flow(column nowrap);
    .flex-justify(flex-start);

    .-item {
        .flex(2 1 auto);

        > input { min-height: 100%; }

        input[type="button"],
        input[type="submit"],
        button,
        [class^="btn"] {
            left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    //  --  Rows reset the flow direction and act as a wrapping container for elements
    .-row {
        .flexbox();
        .flex(0 1 auto);
        margin-top: @margin-half;

        //  Flow adjustments
        &._start        { .flex-justify(flex-start); }
        &._end          { .flex-justify(flex-end); }
        &._justify      { .flex-justify(space-between); }
        &._reverse      { .flex-flow(row-reverse nowrap); }

        &.checkbox,
        &.radio {
            &:first-of-type:not(:only-of-type) { margin-top: @margin-base; }

            .-item {
                flex-grow: 1;
                padding-left: 0.5em;

                &:first-of-type {
                    flex-grow: 0;
                    padding-left: 0;
                }

                &._top > * { min-height: auto; }
            }
        }

        &._padding {}
    }

    [class*="col"] { .flex(0 0 auto); }

    //  --  Column Sizes
    .col {
        .flex(1 1 0);
        max-width: 100%;
    }
    .col1 {
        flex-basis: @grid-col-width * 1;
        max-width: @grid-col-width * 1;
    }
    .col2 {
        flex-basis: @grid-col-width * 2;
        max-width: @grid-col-width * 2;
    }
    .col3 {
        flex-basis: @grid-col-width * 3;
        max-width: @grid-col-width * 3;
    }
    .col4 {
        flex-basis: @grid-col-width * 4;
        max-width: @grid-col-width * 4;
    }
    .col5 {
        flex-basis: @grid-col-width * 5;
        max-width: @grid-col-width * 5;
    }
    .col6 {
        flex-basis: @grid-col-width * 6;
        max-width: @grid-col-width * 6;
    }
    .col7 {
        flex-basis: @grid-col-width * 7;
        max-width: @grid-col-width * 7;
    }
    .col8 {
        flex-basis: @grid-col-width * 8;
        max-width: @grid-col-width * 8;
    }
    .col9 {
        flex-basis: @grid-col-width * 9;
        max-width: @grid-col-width * 9;
    }
    .col10 {
        flex-basis: @grid-col-width * 10;
        max-width: @grid-col-width * 10;
    }
    .col11 {
        flex-basis: @grid-col-width * 11;
        max-width: @grid-col-width * 11;
    }
    .col12 {
        flex-basis: @grid-col-width * 12;
        max-width: @grid-col-width * 12;
    }
}
//  --  INPUT GROUPS
//      Wrapping <div> that provides ammple white space around a unit of
//      form elements
.input-group {
    margin-bottom: @margin-double;

    //  If an input-group is the only one or nested within another, remove the bottom margin on the last one.
    &:only-child,
    &:last-of-type { margin-bottom: 0; }

    //  If a nested input-group directly follows a label, give it a top margin.
    label + & { margin-top: @margin-base; }

    //  --  Input Clusters
    //      Some layouts require us to group similar input groups, but they have their own
    //      labels and input group elements.
    &._cluster {
        .input-group {
            //  We don't need bottom margins here. Let's let rows take care of that.
            margin-bottom: 0;

            //  Nested input-group labels shouldn't be bold as they're secondary labels
            label { font-weight: 400; }
        }

        //  We want visuall spacing between input-groups
        .-row {
            position: relative;

            //  Within checkbox and radio rows, the first item needs to stay small
            &.checkbox,
            &.radio {
                // Reset any previously set margins
                &:first-of-type:not(:only-of-type) { margin-top: @margin-half; }
            }

            [class*="col"] {
                padding-left: 0.25em;
                padding-right: 0.25em;

                &:first-of-type { padding-left: 0; }
                &:last-of-type { padding-right: 0; }
            }
        }
    }

    //  Input prepends, appends, and connectors use the same grayed out box
    //  style. This is the univesal style for it.
    .-fill {
        flex-shrink: 0;
        padding: @input-padding;
        
        font-size: @input-fontSize - 1;
        line-height: 1.538461538;
        color: @black-600;

        background-color: @black-050;
        border: 1px solid @input-border;
        border-left-width: 0;
        border-right-width: 0;
        
        > label {
            font-size: inherit;
            line-height: inherit;
        }

        //  For icons
        > i { align-self: center; }

        .checkbox,
        .radio { margin-top: 0; }

        //  When we don't want borders or backgrounds
        &._clean {
            border-color: transparent;
            background-color: transparent;
        }
    }

    .fill-first,
    .fill-last,
    .fill-multiple {
        //  If a checkbox or radio input follows a prepend
        //  or an append div, insert some space.
        + .checkbox,
        + .radio { margin-top: @margin-half; }
    }

    .fill-first .-fill {
        .flex-order(-1);
        border-left-width: 1px;
    }

    .fill-last {
        .-fill {
            .flex-order(2);
            border-right-width: 1px;
        }
        input[type="button"],
        input[type="submit"],
        button,
        .btn,
        [class*="btn-"] {
            .flex-order(99);    // Because we always want it last.
            margin-left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    //  Sometimes we actually want BOTH append and prepend
    .fill-multiple {
        .-fill:first-of-type {
            .flex-order(-1);
            border-left-width: 1px;
        }
        .-fill:last-of-type {
            .flex-order(99);
            border-right-width: 1px;
        }
    }

    //  If an entire input-group is unavailable, make it look like that.
    &._disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
}

//  --  BUTTON GROUPS
//      Wrapping <div> for buttons / actions
.button-group {
    .flex-flow(row nowrap);
    margin-top: @margin-double;

    [class^="btn"] + [class^="btn"] { margin-left: @margin-half; }

    .-row { width: 100%; }

    //  Applies top border to the button container
    &._border {
        padding-top: 1.4em;
        border-top: 1px solid lighten(@input-border,5%);
    }

    //  Stack the buttons on top of each other
    .-row._stacked {
        flex-direction: column;
        [class^="btn"] + [class^="btn"] {
            margin-left: 0;
            margin-top: @margin-half;
        }
    }
}


//  ============================================================================
//  $ INLINE FORMS
//  --  As much as possible we want the inline input-group component to control
//      way items lay out. Sometimes though we want to override these inline
//      components at the form level so everything is affected.
//  ----------------------------------------------------------------------------
form._inline .input-group {
    flex-direction: row;
    align-items: center;

    > input { margin: 0; }

    > label { padding-right: @padding-double; }

    .-row {
        margin-top: 0;

        input[type="submit"],
        input[type="button"],
        button,
        [class^="btn"] {
            margin-left: -1px;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }
}


//  ============================================================================
//  $ OPTION TOGGLE
//  ----------------------------------------------------------------------------
.option-toggle {
    label + & { margin-top: @margin-half; }

    > .col {
        input[type="radio"] {
            position: absolute;
            left: -9999em;
            opacity: 0;

            &:checked + label {
                color: @white;
                background-color: @blue-500;
                border-color: @blue-500;
                pointer-events: none;
            }
        }

        label {
            display: inherit;
            flex-grow: 1;
            padding: @input-padding;
            margin-left: -1px;

            font-weight: 400;
            line-height: @input-lineHeight;
            text-align: center;
            color: @input-color;
            background-color: @white;
            border: 1px solid @input-border;

            cursor: pointer;
            transition: all 0.15s ease-in-out;

            &:hover {
                color: darken(@input-color,10%);
                background-color: @blue-050;
                border-color: @blue-200;
                z-index: 1;
            }
        }

        &:first-of-type label { 
            margin-left: 0;
            border-radius: @borderRadius-small 0 0 @borderRadius-small; 
        }
        &:last-of-type label  { border-radius: 0 @borderRadius-small @borderRadius-small 0; }
    }
}


//  ============================================================================
//  $ Image upload button
//  ----------------------------------------------------------------------------
.img-upload {
    * { box-sizing: border-box; } // To be removed once we'll have it everywhere
    
    position: relative;
    margin: 7px 0 18px;
    padding: 10px;
    min-height: 60px;
    cursor: pointer;
    
    color: @black-700;
    text-align: center;
    background-color: @black-025;
    border: 1px dashed @black-150;
    transition: all 0.15s ease-in-out;

    &._disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    &:hover {
        background-color: darken(@black-025,1%);

        .text-wrapper {
            color: @link-color;
            .img-size-hint { color: @black-400; }
        }
    }

    .text-wrapper {
        margin: 10px 0;
        font-size: @input-fontSize;
        font-weight: 700;
        line-height: @input-lineHeight;
        text-align: center;
        transition: all 0.15s ease-in-out;

        .icon { margin-bottom: 6px; }

        .img-size-hint {
            display: block;
            margin-top: 1px;
            font-weight: 400;
            font-size: @input-fontSize - 2;
            color: @black-350;
            transition: all 0.15s ease-in-out;
        }
    }

    // "X" button
    .remove {
        position: absolute;
        top: -7px;
        right: -11px;
        padding: 4px;
        width: 22px;
        height: 22px;

        color: @black-600;
        text-align: center;
        border-radius: 50%;
        background-color: @black-150;
        transition: all 0.15s ease-in-out;

        &:hover {
            color: @white;
            background-color: @blue-500;
        }
    }
}


//  ============================================================================
//  $ TAG EDITOR
//  ----------------------------------------------------------------------------
.tag-editor {
    position: relative;
    overflow: hidden;
    padding: 6px;
    white-space: nowrap;
    cursor: text;

    label ~ & { margin-top: @margin-half; }
    
    //  --  Multi-line Tag Editor
    &.multi-line {
        padding-top: 1px;
        white-space: normal;
        height: auto;

        input { margin: 0 0 0 4px; }
        .rendered-element,
        .post-tag { margin: 4px 3px 0 0; }
    }

    //  Where the user types to add tags
    input[type="text"] {
        position: relative;
        display: inline-block;
        left: 6px;
        min-height: 24px;
        border: none;
        box-shadow: none;
        outline: 0;
        padding: 0;

        &:focus { border: 0; }
    }

    .post-tag { margin: 0 3px 0 0; }
}


//  ============================================================================
//  $ Chosen plugin (JS plugin)
//  ----------------------------------------------------------------------------
.container .chosen-container {
    margin-top: @margin-half;

    &.chosen-container-active {
        border: 1px solid @input_focused-color;

        li.search-field input[type="text"] {
            color: @input-color;
        }
    }

    .chosen-choices {
        box-shadow: none;
        padding: 0 !important;
        margin: 0 !important;

        li.search-field input[type="text"] { padding: @input-padding; }
    }

    .team-join {
        .addtoprofile {
            margin-top: 6px;
            font-weight: 400;
        }
        .join-date {
            margin-top: 6px;
        }
    }
}


//  ============================================================================
//  $ Input option (privacy)
//    Used in the developer story: header > edit > "display name"
//  ----------------------------------------------------------------------------
.privacy-wrapper {
    position: relative;

    //
    // Display off when hidden, inline when toggled
    // "Synchronized with your profile" on the DS
    .privacy-checkbox {
        display: none;
        width: auto;
        padding: 3px 6px;
        border-radius: 3px 3px 0px 0px;

        position: absolute;
        top: -8px;
        right: 0;

        font-size: 11px;
        color: white;
        background: @blue-500;

        input[type="checkbox"] {
            position: relative;
            z-index: 1;
            margin-right: 8px;
        }

        &:focus {
            outline: 0;
        }

        &:before {
            content: '';
            display: inline-block;
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 24px;
            background: darken(@blue-500, 12%);
            z-index: 0;
            border-radius: 3px 0px 0px 0px;
        }
    }
}